[[MACROS]]
Using Macros to Extend Elixir
-----------------------------


////
NOTE: You can learn more about macros in???
////

[[CH12-ET01]]
Étude 12-1: Atomic weights
~~~~~~~~~~~~~~~~~~~~~~~~~~
In this étude, you will create module named +Atomic+ that will create a
set of functions whose names are the symbols for the elements (all lowercase,
as Elixir does not allow a function name to start with an uppercase letter).
These functions take no arguments and return the atomic weight of the
element, rounded to three decimal places. Here is a list of the first
26 elements in a form that may be useful to you.

----
[{h, 1.008}, {he, 4.003},
 {li, 6.94}, {be, 9.012}, {b, 10.81}, {c, 12.011},
 {n, 14.007}, {o, 15.999}, {f, 18.998}, {ne, 20.178},
 {na, 22.990}, {mg, 24.305}, {al, 26.981}, {si, 28.085},
 {p, 30.974}, {s, 32.06}, {cl, 35.45}, {ar, 39.948},
 {k, 39.098}, {ca, 40.078}, {sc, 44.956}, {ti, 47.867},
 {v, 50.942}, {cr, 51.996}, {mn, 54.938}, {fe, 55.845}]
----

You don't need to do all 92 of the basic elements unless you
feel especially ambitious; the purpose of this étude is to use macros, not
to learn chemistry.

Write one module named +AtomicMaker+ that has the +defmacro+ in it, and
another module named +Atomic+ that will +require AtomicMaker+.

Once you have this, you will be able to calculate the atomic weights of
molecules:

// [source, iex]
----
iex(1)> c("atomic_maker.ex")
[AtomicMaker]
iex(2)> c("atomic.ex")
[Atomic]
iex(3)> import Atomic
nil
iex(4)> water = h * 2 + o
18.015
iex(5)> sulfuric_acid = h * 2 + s + o * 4
98.072
iex(6)> salt = na + cl
58.44
----

<<SOLUTION12-ET01,See a suggested solution in Appendix A.>>

[[CH12-ET02]]
Étude 12-2: Adding Durations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

////
<<SOLUTION12-ET02,See a suggested solution in Appendix A.>>

[[CH12-ET03]]
Étude 12-3: Adding Durations (operator version)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


<<SOLUTION12-ET03,See a suggested solution in Appendix A.>>
////
